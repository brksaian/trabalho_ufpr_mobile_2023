// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                @id @default(uuid())
  name                String
  email               String                @unique
  telefone            String
  cpf                 String                @unique
  endereco            String
  password            String
  type                String                @default("CLIENTE")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  Movie_Favorite      Movie_Favorite[]
  Movie_Watched       Movie_Watched[]
  Movie_Next_to_Watch Movie_Next_to_Watch[]
  Review              Review[]
  TV_Favorite         TV_Favorite[]
  TV_Watched          TV_Watched[]
  TV_Next_to_Watch    TV_Next_to_Watch[]
}

model Movie_Favorite {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  movieId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Movie_Watched {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  movieId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Movie_Next_to_Watch {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  movieId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  review      String
  score       Int
  movie_tv_Id Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TV_Favorite {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  serieId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TV_Watched {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  serieId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TV_Next_to_Watch {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  serieId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
